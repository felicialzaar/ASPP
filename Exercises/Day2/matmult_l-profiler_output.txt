Timer unit: 1e-06 s

Total time: 0.211283 s
File: matmult_profile.py
Function: create_x at line 5

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     5                                           @profile
     6                                           def create_x(N):
     7         1          5.0      5.0      0.0    X = []
     8       251        159.0      0.6      0.1    for i in range(N):
     9       250     211119.0    844.5     99.9      X.append([random.randint(0,100) for r in range(N)])
    10         1          0.0      0.0      0.0    return X

Total time: 0.2146 s
File: matmult_profile.py
Function: create_y at line 13

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    13                                           @profile
    14                                           def create_y(N):
    15         1          0.0      0.0      0.0    Y = []
    16       251        161.0      0.6      0.1    for i in range(N):
    17       250     214439.0    857.8     99.9      Y.append([random.randint(0,100) for r in range(N+1)])
    18         1          0.0      0.0      0.0    return Y

Total time: 20.7774 s
File: matmult_profile.py
Function: multiply at line 21

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    21                                           @profile
    22                                           def multiply(N, X, Y):
    23                                             # result is Nx(N+1)
    24         1          1.0      1.0      0.0    result = []
    25       251         91.0      0.4      0.0    for i in range(N):
    26       250        375.0      1.5      0.0      result.append([0] * (N+1))
    27       251        124.0      0.5      0.0    for i in range(len(X)):
    28                                               # iterate through columns of Y
    29     63000      28011.0      0.4      0.1      for j in range(len(Y[0])):
    30                                                 # iterate through rows of Y
    31  15750250    7109875.0      0.5     34.2        for k in range(len(Y)):
    32  15687500   13638961.0      0.9     65.6          result[i][j] += X[i][k] * Y[k][j]
    33         1          1.0      1.0      0.0    return result

Total time: 0.033407 s
File: matmult_profile.py
Function: print_results at line 35

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    35                                           @profile
    36                                           def print_results(result):
    37       251        405.0      1.6      1.2    for r in result:
    38       250      33002.0    132.0     98.8      print(r)

